---
import Layout from "../layouts/Layout.astro";
import Gradient from "../components/Gradient.astro";
---

<script>
	import { Gradient } from "../lib/gradient.js";

	const gradientWrapper = document.getElementById("gradient-wrapper");
	const gradients = [...gradientWrapper.children];
	const sections = document.querySelectorAll("section");

	function observerCallback(entryRaw: IntersectionObserverEntry[]) {
		const entry = entryRaw[0];
		if (!entry.isIntersecting) return;

		const currentCycle = entry.target.dataset.idx;
		console.log(currentCycle)
		gradients.forEach((el) => {
			if (el.dataset.idx === currentCycle) {
				el.classList.add("current-gradient")
			} else {
				el.classList.remove("current-gradient")
			}
		})
	}

	const observer = new IntersectionObserver(observerCallback, { threshold: 0.75 });

	sections.forEach(observer.observe.bind(observer))

	gradients.forEach((el) => {
		const gradient = new Gradient();

		//@ts-ignore
		gradient.initGradient("#" + el.id.split(" ").find((i) => i.startsWith("gradient-canvas-")));
	})
</script>

<div id="gradient-wrapper">
	<Gradient cycle={0} />
	<Gradient cycle={1} />
	<Gradient cycle={2} />
	<Gradient cycle={3} />
</div>

<Layout title="Background demo" background={false}>
	<section data-idx=0 />
	<section data-idx=1 />
	<section data-idx=2 />
	<section data-idx=3 />
</Layout>

<style>
	#gradient-wrapper {
		display: contents;
	}

	:global(canvas) {
		opacity: 0;
		transition: opacity 0.75s;
	}
	:global(canvas.current-gradient) {
		opacity: 1;
	}

	section {
		--margin: 2rem;

		height: calc(100svh - var(--nav-height) - var(--margin));

		&:nth-child(1) {
			border: 4px solid #ff000040;
		}
		&:nth-child(2) {
			border: 4px solid #00ff0040;
		}
		&:nth-child(3) {
			border: 4px solid #0000ff40;
		}
		&:nth-child(4) {
			border: 4px solid #00000040;
		}
		&:nth-child(5) {
			border: 4px solid #ff00ff40;
		}
	}
</style>
